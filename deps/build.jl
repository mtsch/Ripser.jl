using BinaryProvider # requires BinaryProvider 0.3.0 or later

# Parse some basic command-line arguments
const verbose = "--verbose" in ARGS
const prefix = Prefix(get([a for a in ARGS if a != "--verbose"], 1, joinpath(@__DIR__, "usr")))
products = [
    LibraryProduct(prefix, ["libripser"], :libripser),
]

# Download binaries from hosted location
bin_prefix = "https://github.com/mtsch/RipserBuilder/releases/download/v0.3.3"

# Listing of files generated by BinaryBuilder:
download_info = Dict(
    Linux(:aarch64, libc=:glibc) => ("$bin_prefix/Ripser.v0.3.0.aarch64-linux-gnu.tar.gz", "50f2d0cd4bb4bfc791bfdef97533e24c2c4757ca370f46fe0e63f9b47eeb83a6"),
    Linux(:aarch64, libc=:musl) => ("$bin_prefix/Ripser.v0.3.0.aarch64-linux-musl.tar.gz", "ad8e261f05c438dda65543c96c37ca3f58d17a337b395bcd487d011a2b362d2d"),
    Linux(:armv7l, libc=:glibc, call_abi=:eabihf) => ("$bin_prefix/Ripser.v0.3.0.arm-linux-gnueabihf.tar.gz", "5eacb3ce40f4ad1174315a667b05c3bb5fc7a64d6be2781987d5bcbc57767c73"),
    Linux(:armv7l, libc=:musl, call_abi=:eabihf) => ("$bin_prefix/Ripser.v0.3.0.arm-linux-musleabihf.tar.gz", "f9fd485b7302b8ea2cdc5bd1cc70e60329c0f2fffc1e4a23f258ce5c8f107a4c"),
    Linux(:i686, libc=:glibc) => ("$bin_prefix/Ripser.v0.3.0.i686-linux-gnu.tar.gz", "63727ee682a1c583f6b6a1687c23dce5e4b73f35a792c3e2fccca5ab55effd07"),
    Linux(:i686, libc=:musl) => ("$bin_prefix/Ripser.v0.3.0.i686-linux-musl.tar.gz", "b637b13ed6a275e0939f3b02be1c5a6b177f3ced8527e27fcbc6fd44f89dd6cb"),
    Windows(:i686) => ("$bin_prefix/Ripser.v0.3.0.i686-w64-mingw32.tar.gz", "e523fffece9ff6f48b8c8c761430b87f7dc80fa1d8acad982838281d400dc5a5"),
    Linux(:powerpc64le, libc=:glibc) => ("$bin_prefix/Ripser.v0.3.0.powerpc64le-linux-gnu.tar.gz", "5810b102a614d65f4e51cb1fb7a6b60c042c0f104a663509cc65f1b374eee44c"),
    Linux(:x86_64, libc=:glibc) => ("$bin_prefix/Ripser.v0.3.0.x86_64-linux-gnu.tar.gz", "f52c67ed539bc6f418ec7f550aff34e277dfe7e509a4bc5b0624aec0564e5fbc"),
    Linux(:x86_64, libc=:musl) => ("$bin_prefix/Ripser.v0.3.0.x86_64-linux-musl.tar.gz", "554a9e5d8c5c06c1d6d2907abb13e3162bb0eb8b3578b119a59794d149f599c6"),
    FreeBSD(:x86_64) => ("$bin_prefix/Ripser.v0.3.0.x86_64-unknown-freebsd11.1.tar.gz", "b74e0b56cb56c73ef249f068b1ce7b20377713ac122a4e7fdc3752517932250d"),
    Windows(:x86_64) => ("$bin_prefix/Ripser.v0.3.0.x86_64-w64-mingw32.tar.gz", "b18810b9171a3755695e11a6d08686bb7ae27ca4aa3c9d2af7cd3f6b73ec1f8f"),
)

# Install unsatisfied or updated dependencies:
unsatisfied = any(!satisfied(p; verbose=verbose) for p in products)
dl_info = choose_download(download_info, platform_key_abi())
if dl_info === nothing && unsatisfied
    # If we don't have a compatible .tar.gz to download, complain.
    # Alternatively, you could attempt to install from a separate provider,
    # build from source or something even more ambitious here.
    error("Your platform (\"$(Sys.MACHINE)\", parsed as \"$(triplet(platform_key_abi()))\") is not supported by this package!")
end

# If we have a download, and we are unsatisfied (or the version we're
# trying to install is not itself installed) then load it up!
if unsatisfied || !isinstalled(dl_info...; prefix=prefix)
    # Download and install binaries
    install(dl_info...; prefix=prefix, force=true, verbose=verbose)
end

# Write out a deps.jl file that will contain mappings for our products
write_deps_file(joinpath(@__DIR__, "deps.jl"), products, verbose=verbose)
