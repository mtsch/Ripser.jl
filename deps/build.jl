using BinaryProvider # requires BinaryProvider 0.3.0 or later

# Parse some basic command-line arguments
const verbose = "--verbose" in ARGS
const prefix = Prefix(get([a for a in ARGS if a != "--verbose"], 1, joinpath(@__DIR__, "usr")))
products = [
    LibraryProduct(prefix, ["libripser"], :libripser),
]

# Download binaries from hosted location
bin_prefix = "https://github.com/mtsch/RipserBuilder/releases/download/v0.3.0"

# Listing of files generated by BinaryBuilder:
download_info = Dict(
    Linux(:aarch64, libc=:glibc) => ("$bin_prefix/Ripser.v0.3.0.aarch64-linux-gnu.tar.gz", "603baefe71c23e2ca1e25a8a5196b66b8ca5020ea255eef9cc4f103a2fe03ef4"),
    Linux(:aarch64, libc=:musl) => ("$bin_prefix/Ripser.v0.3.0.aarch64-linux-musl.tar.gz", "29a28a9d9b8f8d5e4b46a38065cad5a49ed9d3f659c47f4e1a5df338cbada078"),
    Linux(:armv7l, libc=:glibc, call_abi=:eabihf) => ("$bin_prefix/Ripser.v0.3.0.arm-linux-gnueabihf.tar.gz", "400e67f48aaf6f0903910aa7b20681b6d62724dc622aa93ae884f7a664b2eab3"),
    Linux(:armv7l, libc=:musl, call_abi=:eabihf) => ("$bin_prefix/Ripser.v0.3.0.arm-linux-musleabihf.tar.gz", "9f159738cc82576de4922781dfb4a76aa729e9d5c85b3d3b6d8cad0a3c08136a"),
    Linux(:i686, libc=:glibc) => ("$bin_prefix/Ripser.v0.3.0.i686-linux-gnu.tar.gz", "75ef4437d348f55fc798e6121f8ba7ee9374b14f8c1a49f611a163bc1c166207"),
    Linux(:i686, libc=:musl) => ("$bin_prefix/Ripser.v0.3.0.i686-linux-musl.tar.gz", "322d5fd797836ee44bcbde32ca9ae14f7fa2a143937db167cbe8771409456c4e"),
    Windows(:i686) => ("$bin_prefix/Ripser.v0.3.0.i686-w64-mingw32.tar.gz", "41db6dc39b3872e48514a23c507006811062cf35f507108ac1dc2dd79f9907d1"),
    Linux(:powerpc64le, libc=:glibc) => ("$bin_prefix/Ripser.v0.3.0.powerpc64le-linux-gnu.tar.gz", "0a774da543b22100e7bc77ed253e8c13a5c405cf274126eec223cc85a1f3bca6"),
    Linux(:x86_64, libc=:glibc) => ("$bin_prefix/Ripser.v0.3.0.x86_64-linux-gnu.tar.gz", "7e44666c57fd882225a19adcf5b104616f83c7865e8d83fa25b3c4db1f8cc7cc"),
    Linux(:x86_64, libc=:musl) => ("$bin_prefix/Ripser.v0.3.0.x86_64-linux-musl.tar.gz", "6a4721ade3cb9d00be3cb01fabcd77783fdaeaba7ecff4f37ff2fb384461487f"),
    FreeBSD(:x86_64) => ("$bin_prefix/Ripser.v0.3.0.x86_64-unknown-freebsd11.1.tar.gz", "b63e34a614972de3d7bc4cd443673f81413879b501d79cf3af00646befb3e6fd"),
    Windows(:x86_64) => ("$bin_prefix/Ripser.v0.3.0.x86_64-w64-mingw32.tar.gz", "ab6beed1424091db12c312213b14b635ecdc7c0301137d1339eabbe3a28b499d"),
)

# Install unsatisfied or updated dependencies:
unsatisfied = any(!satisfied(p; verbose=verbose) for p in products)
dl_info = choose_download(download_info, platform_key_abi())
if dl_info === nothing && unsatisfied
    # If we don't have a compatible .tar.gz to download, complain.
    # Alternatively, you could attempt to install from a separate provider,
    # build from source or something even more ambitious here.
    error("Your platform (\"$(Sys.MACHINE)\", parsed as \"$(triplet(platform_key_abi()))\") is not supported by this package!")
end

# If we have a download, and we are unsatisfied (or the version we're
# trying to install is not itself installed) then load it up!
if unsatisfied || !isinstalled(dl_info...; prefix=prefix)
    # Download and install binaries
    install(dl_info...; prefix=prefix, force=true, verbose=verbose)
end

# Write out a deps.jl file that will contain mappings for our products
write_deps_file(joinpath(@__DIR__, "deps.jl"), products, verbose=verbose)
