using BinaryProvider # requires BinaryProvider 0.3.0 or later

# Parse some basic command-line arguments
const verbose = "--verbose" in ARGS
const prefix = Prefix(get([a for a in ARGS if a != "--verbose"], 1, joinpath(@__DIR__, "usr")))
products = [
    LibraryProduct(prefix, ["libripser"], :libripser),
]

# Download binaries from hosted location
bin_prefix = "https://github.com/mtsch/RipserBuilder/releases/download/v0.3.4"

# Listing of files generated by BinaryBuilder:
download_info = Dict(
    Linux(:aarch64, libc=:glibc) => ("$bin_prefix/Ripser.v0.3.0.aarch64-linux-gnu.tar.gz", "e1181f4b0263b1746cca1a88229bda49b4fbdb77d0d41c8ef6241946bcb5c1b3"),
    Linux(:aarch64, libc=:musl) => ("$bin_prefix/Ripser.v0.3.0.aarch64-linux-musl.tar.gz", "5ad20aa730a2cb1d32ed7a05f3fe184e4de663a5fe91ac757095831df263f852"),
    Linux(:armv7l, libc=:glibc, call_abi=:eabihf) => ("$bin_prefix/Ripser.v0.3.0.arm-linux-gnueabihf.tar.gz", "339ba5bd1c356c0f7da30a5b908b3cd40d49b9e36c14e397f4a5d50d175fcc08"),
    Linux(:armv7l, libc=:musl, call_abi=:eabihf) => ("$bin_prefix/Ripser.v0.3.0.arm-linux-musleabihf.tar.gz", "1b28e07ec435bd40b547598b9a595b7749c4f5f129870110c1a2e0a181b01c30"),
    Linux(:i686, libc=:glibc) => ("$bin_prefix/Ripser.v0.3.0.i686-linux-gnu.tar.gz", "2989e9b1b9e81596705a7a80684194baa9ec9e26e328b0ab69ed8dd92e6d94b1"),
    Linux(:i686, libc=:musl) => ("$bin_prefix/Ripser.v0.3.0.i686-linux-musl.tar.gz", "ce71da6f6d745c5a6338792dc31deb518cac973ef5c0b2748d61febc0e771a5f"),
    Windows(:i686) => ("$bin_prefix/Ripser.v0.3.0.i686-w64-mingw32.tar.gz", "e0ef93e1af47ca9d636671e9d6f528849a0d1b3b8de18cc64837fca3700fb0ec"),
    Linux(:powerpc64le, libc=:glibc) => ("$bin_prefix/Ripser.v0.3.0.powerpc64le-linux-gnu.tar.gz", "cf7300e4b9a634ae9e0649cb39e17acd98291d5f673a58d7b15b81b8ad5a4e90"),
    Linux(:x86_64, libc=:glibc) => ("$bin_prefix/Ripser.v0.3.0.x86_64-linux-gnu.tar.gz", "1e1b0673a5955ccb6613c212c8862be6ecca9c9b66f2332256874e2dc02a2551"),
    Linux(:x86_64, libc=:musl) => ("$bin_prefix/Ripser.v0.3.0.x86_64-linux-musl.tar.gz", "22b815325799aab97b5938cfc6d593f2f4fee93d0356eb905a8e3cbb37b99eec"),
    FreeBSD(:x86_64) => ("$bin_prefix/Ripser.v0.3.0.x86_64-unknown-freebsd11.1.tar.gz", "ea76a28dba6434b296c38809a20ea441e96f94b35f9ff43df0ec3c935189f8bc"),
    Windows(:x86_64) => ("$bin_prefix/Ripser.v0.3.0.x86_64-w64-mingw32.tar.gz", "f3f212fcfc9fa88af40b4eb504ac52e00da963133275dc72fae198179f61f8da"),
)

# Install unsatisfied or updated dependencies:
unsatisfied = any(!satisfied(p; verbose=verbose) for p in products)
dl_info = choose_download(download_info, platform_key_abi())
if dl_info === nothing && unsatisfied
    # If we don't have a compatible .tar.gz to download, complain.
    # Alternatively, you could attempt to install from a separate provider,
    # build from source or something even more ambitious here.
    error("Your platform (\"$(Sys.MACHINE)\", parsed as \"$(triplet(platform_key_abi()))\") is not supported by this package!")
end

# If we have a download, and we are unsatisfied (or the version we're
# trying to install is not itself installed) then load it up!
if unsatisfied || !isinstalled(dl_info...; prefix=prefix)
    # Download and install binaries
    install(dl_info...; prefix=prefix, force=true, verbose=verbose)
end

# Write out a deps.jl file that will contain mappings for our products
write_deps_file(joinpath(@__DIR__, "deps.jl"), products, verbose=verbose)
