using BinaryProvider # requires BinaryProvider 0.3.0 or later

# Parse some basic command-line arguments
const verbose = "--verbose" in ARGS
const prefix = Prefix(get([a for a in ARGS if a != "--verbose"], 1, joinpath(@__DIR__, "usr")))
products = [
    LibraryProduct(prefix, ["libripser"], :libripser),
]

# Download binaries from hosted location
bin_prefix = "https://github.com/mtsch/RipserBuilder/releases/download/v0.3.0.dev51"

# Listing of files generated by BinaryBuilder:
download_info = Dict(
    Linux(:aarch64, libc=:glibc) => ("$bin_prefix/Ripser.v0.3.0-dev51.aarch64-linux-gnu.tar.gz", "6c12309f5afc74695f8106cdc69f33bf09d17a3a99d63f589ef59fa133a09709"),
    Linux(:aarch64, libc=:musl) => ("$bin_prefix/Ripser.v0.3.0-dev51.aarch64-linux-musl.tar.gz", "b577d52588d3aadf8be81ece19fc60ffafc5cbdd92674b84d7e0f847095bd932"),
    Linux(:armv7l, libc=:glibc, call_abi=:eabihf) => ("$bin_prefix/Ripser.v0.3.0-dev51.arm-linux-gnueabihf.tar.gz", "cbeb06558f9fbdbe962befe91e8167a8531955a012bb944274a3634cf97c9492"),
    Linux(:armv7l, libc=:musl, call_abi=:eabihf) => ("$bin_prefix/Ripser.v0.3.0-dev51.arm-linux-musleabihf.tar.gz", "56598200e99886fa232dfa256b28879203c3ec9d045d0b178ee1e8494f4287c0"),
    Linux(:i686, libc=:glibc) => ("$bin_prefix/Ripser.v0.3.0-dev51.i686-linux-gnu.tar.gz", "96e4f4589d931c5c9adf913aa96ffe373f3607a9813ee2cef76454a26977c620"),
    Linux(:i686, libc=:musl) => ("$bin_prefix/Ripser.v0.3.0-dev51.i686-linux-musl.tar.gz", "5813694602df11953dc6d9fab2fbce1ff0439b1538d895434f7b60b9c579de18"),
    Windows(:i686) => ("$bin_prefix/Ripser.v0.3.0-dev51.i686-w64-mingw32.tar.gz", "3abd80898f58806d633147ade60b02df374bbbd5f16b6737ee66e8a671f3a7b2"),
    Linux(:powerpc64le, libc=:glibc) => ("$bin_prefix/Ripser.v0.3.0-dev51.powerpc64le-linux-gnu.tar.gz", "0ac6bf177f6f6712703c89d6113194630332646014cafb29ed3cd350b17e82bf"),
    MacOS(:x86_64) => ("$bin_prefix/Ripser.v0.3.0-dev51.x86_64-apple-darwin14.tar.gz", "3bbba1c130edc87b15540949b3660c287482a85c50ccac998fb6fccec39fe689"),
    Linux(:x86_64, libc=:glibc) => ("$bin_prefix/Ripser.v0.3.0-dev51.x86_64-linux-gnu.tar.gz", "33ec253da458918b675bbbcf3542902a5f3213928f3876d2e2329c4f2dfc6afe"),
    Linux(:x86_64, libc=:musl) => ("$bin_prefix/Ripser.v0.3.0-dev51.x86_64-linux-musl.tar.gz", "0ca5a37e4b56c171e41f451ecca12f92c1f46364e0b24b8a228b0af046c9ef34"),
    FreeBSD(:x86_64) => ("$bin_prefix/Ripser.v0.3.0-dev51.x86_64-unknown-freebsd11.1.tar.gz", "33ecb824a7d2412aa30dbb20f752f4cf6f3653c3e0dca183ce1dd7a9934ad8ba"),
    Windows(:x86_64) => ("$bin_prefix/Ripser.v0.3.0-dev51.x86_64-w64-mingw32.tar.gz", "5e50038bc2ed83192c4c12ede058964ea8314840c68853c4b073bd03d630b676"),
)

# Install unsatisfied or updated dependencies:
unsatisfied = any(!satisfied(p; verbose=verbose) for p in products)
dl_info = choose_download(download_info, platform_key_abi())
if dl_info === nothing && unsatisfied
    # If we don't have a compatible .tar.gz to download, complain.
    # Alternatively, you could attempt to install from a separate provider,
    # build from source or something even more ambitious here.
    error("Your platform (\"$(Sys.MACHINE)\", parsed as \"$(triplet(platform_key_abi()))\") is not supported by this package!")
end

# If we have a download, and we are unsatisfied (or the version we're
# trying to install is not itself installed) then load it up!
if unsatisfied || !isinstalled(dl_info...; prefix=prefix)
    # Download and install binaries
    install(dl_info...; prefix=prefix, force=true, verbose=verbose)
end

# Write out a deps.jl file that will contain mappings for our products
write_deps_file(joinpath(@__DIR__, "deps.jl"), products, verbose=verbose)
