using BinaryProvider # requires BinaryProvider 0.3.0 or later

# Parse some basic command-line arguments
const verbose = "--verbose" in ARGS
const prefix = Prefix(get([a for a in ARGS if a != "--verbose"], 1, joinpath(@__DIR__, "usr")))
products = [
    LibraryProduct(prefix, ["libripser"], :libripser),
]

# Download binaries from hosted location
bin_prefix = "https://github.com/mtsch/RipserBuilder/releases/download/v0.3.0-2"

# Listing of files generated by BinaryBuilder:
download_info = Dict(
    Linux(:aarch64, libc=:glibc) => ("$bin_prefix/Ripser.v0.3.0.aarch64-linux-gnu.tar.gz", "43728eaf55f4910214aa056506559d7f54eb385010d1114424aebf41cba9f1ef"),
    Linux(:aarch64, libc=:musl) => ("$bin_prefix/Ripser.v0.3.0.aarch64-linux-musl.tar.gz", "d2e33ac45891d8c064c23129479bfa54d94dabf8e031605a261bc4edbe64c723"),
    Linux(:armv7l, libc=:glibc, call_abi=:eabihf) => ("$bin_prefix/Ripser.v0.3.0.arm-linux-gnueabihf.tar.gz", "6f62fdbc1294175482f2cc2e8fb97eaf736030b882b2d7daa73b394417b9c46f"),
    Linux(:armv7l, libc=:musl, call_abi=:eabihf) => ("$bin_prefix/Ripser.v0.3.0.arm-linux-musleabihf.tar.gz", "57096badb847c05875c5733364f32c029ac3964ae1571b35b0f90fe39761ccd9"),
    Linux(:i686, libc=:glibc) => ("$bin_prefix/Ripser.v0.3.0.i686-linux-gnu.tar.gz", "2e9d14b51e6b58d7e1eaee4d4cb1ac2bab66c381537b6e80e84ff9a4cd880f8d"),
    Linux(:i686, libc=:musl) => ("$bin_prefix/Ripser.v0.3.0.i686-linux-musl.tar.gz", "af98a8b84baedd8fc8d5e85b051c62c75e0b227ec127d06087db13e363175d3b"),
    Windows(:i686) => ("$bin_prefix/Ripser.v0.3.0.i686-w64-mingw32.tar.gz", "678296bcfc071b7f4dd3b38f7aa615e4e2dd41b386cef3f1f801a7d82b258083"),
    Linux(:powerpc64le, libc=:glibc) => ("$bin_prefix/Ripser.v0.3.0.powerpc64le-linux-gnu.tar.gz", "44a31eab6b1831b9d6f0af9b9bc49a86783ce965326bb1863f1467aad55228c9"),
    MacOS(:x86_64) => ("$bin_prefix/Ripser.v0.3.0.x86_64-apple-darwin14.tar.gz", "bfac06c4decd5481852d80a174aefe5fdd2070ad65725553cd0d2c7a84c195b2"),
    Linux(:x86_64, libc=:glibc) => ("$bin_prefix/Ripser.v0.3.0.x86_64-linux-gnu.tar.gz", "95b70324d454077d1bf9634200920bf5b491e5e7baffeaea696a9ea2f0b69534"),
    Linux(:x86_64, libc=:musl) => ("$bin_prefix/Ripser.v0.3.0.x86_64-linux-musl.tar.gz", "fb8397df17b6a49adf493ef10879c3fa6598cc5ef01c5fb2c72bba8b72fc6a60"),
    FreeBSD(:x86_64) => ("$bin_prefix/Ripser.v0.3.0.x86_64-unknown-freebsd11.1.tar.gz", "1cf28f202319bd8c339661083016e793adafb4868b26f0450bda521800530e8d"),
    Windows(:x86_64) => ("$bin_prefix/Ripser.v0.3.0.x86_64-w64-mingw32.tar.gz", "1a6806d8fbff275885478bd0440e64111694e04d7b43b74b669df651d2002d70"),
)

# Install unsatisfied or updated dependencies:
unsatisfied = any(!satisfied(p; verbose=verbose) for p in products)
dl_info = choose_download(download_info, platform_key_abi())
if dl_info === nothing && unsatisfied
    # If we don't have a compatible .tar.gz to download, complain.
    # Alternatively, you could attempt to install from a separate provider,
    # build from source or something even more ambitious here.
    error("Your platform (\"$(Sys.MACHINE)\", parsed as \"$(triplet(platform_key_abi()))\") is not supported by this package!")
end

# If we have a download, and we are unsatisfied (or the version we're
# trying to install is not itself installed) then load it up!
if unsatisfied || !isinstalled(dl_info...; prefix=prefix)
    # Download and install binaries
    install(dl_info...; prefix=prefix, force=true, verbose=verbose)
end

# Write out a deps.jl file that will contain mappings for our products
write_deps_file(joinpath(@__DIR__, "deps.jl"), products, verbose=verbose)
